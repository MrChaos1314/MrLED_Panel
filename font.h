#pragma once

#include "config.h"


bool panel_on[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 1, 1, 1,  //2
  1, 1, 1, 1,  //3
  1, 1, 1, 1,  //4
  1, 1, 1, 1,  //5
  1, 1, 1, 1,  //6
  1, 1, 1, 1,  //7
  1, 1, 1, 1,  //8
};

bool panel_off[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 0, 0, 0,  //7
  0, 0, 0, 0,  //8
};

//--------------------------------

bool letter_A[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_B[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_C[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool letter_D[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_E[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool letter_F[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_G[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 1, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_H[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_I[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  1, 1, 1, 0,  //8
};

bool letter_J[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 0, 1,  //4
  0, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_K[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 1, 0,  //2
  1, 1, 0, 0,  //3
  1, 1, 0, 0,  //4
  1, 1, 0, 0,  //5
  1, 0, 1, 0,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_L[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool letter_M[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 1, 1, 1,  //2
  1, 1, 1, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_N[PANEL_SIZE]{
  0, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 1, 0, 1,  //3
  1, 1, 0, 1,  //4
  1, 0, 1, 1,  //5
  1, 0, 1, 1,  //6
  1, 0, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_O[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_P[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_Q[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  0, 1, 1, 0,  //7
  0, 0, 1, 1,  //8
};

bool letter_R[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_S[PANEL_SIZE]{
  0, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_T[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_U[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_V[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 1,  //6
  0, 1, 1, 0,  //7
  0, 1, 1, 0,  //8
};

bool letter_W[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 1,  //6
  1, 1, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_X[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  0, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_Y[PANEL_SIZE]{
  1, 0, 1, 0,  //1
  1, 0, 1, 0,  //2
  1, 0, 1, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_Z[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 1, 0,  //3
  0, 0, 1, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

//---------------------------

bool letter_a[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  1, 1, 1, 0,  //3
  0, 0, 0, 1,  //4
  0, 1, 0, 1,  //5
  1, 0, 1, 1,  //6
  1, 0, 1, 1,  //7
  0, 1, 0, 1,  //8
};

bool letter_b[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_c[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 1, 1, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  0, 1, 1, 0,  //8
};

bool letter_d[PANEL_SIZE]{
  0, 0, 0, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 0, 1,  //4
  0, 1, 1, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_e[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 0,  //6
  1, 0, 0, 0,  //7
  0, 1, 1, 1,  //8
};

bool letter_f[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 1, 0, 1,  //2
  0, 1, 0, 0,  //3
  1, 1, 1, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_g[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  0, 1, 1, 1,  //6
  0, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_h[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_i[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 1, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_j[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 1, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 1, 0,  //6
  1, 0, 1, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_k[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 1, 0,  //5
  1, 1, 0, 0,  //6
  1, 0, 1, 0,  //7
  1, 0, 1, 0,  //8
};

bool letter_l[PANEL_SIZE]{
  1, 1, 0, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  1, 1, 1, 0,  //8
};

bool letter_m[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 0, 1,  //4
  1, 1, 1, 1,  //5
  1, 1, 1, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_n[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_o[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 1, 1,  //5
  1, 0, 0, 1,  //6
  1, 1, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_p[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 0,  //3
  1, 0, 0, 1,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_q[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 0,  //3
  1, 0, 0, 1,  //4
  0, 1, 1, 1,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  0, 0, 0, 1,  //8
};

bool letter_r[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 1, 0,  //4
  1, 1, 0, 1,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_s[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 0, 1, 0,  //7
  1, 1, 0, 0,  //8
};

bool letter_t_[PANEL_SIZE]{
  0, 1, 0, 0,  //1
  0, 1, 0, 0,  //2
  1, 1, 1, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 1,  //7
  0, 0, 1, 0,  //8
};

bool letter_u[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_v[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 1, 1, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_w[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 1, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_x[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  0, 1, 1, 0,  //6
  0, 1, 1, 0,  //7
  1, 0, 0, 1,  //8
};

bool letter_y[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 1, 0,  //4
  1, 0, 1, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_z[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 1, 1, 1,  //5
  0, 0, 1, 0,  //6
  0, 1, 0, 0,  //7
  1, 1, 1, 1,  //8
};

//-------------------------

bool number_0[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 1, 1,  //4
  1, 1, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool number_1[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 1, 1, 0,  //2
  1, 0, 1, 0,  //3
  0, 0, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 1, 0,  //6
  0, 0, 1, 0,  //7
  0, 1, 1, 1,  //8
};

bool number_3[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_4[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  0, 0, 0, 1,  //8
};

bool number_5[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 0,  //4
  0, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_6[PANEL_SIZE]{
  0, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_7[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool number_8[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  1, 1, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 1, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_9[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 1,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};


bool *panel_ascii[] = {
  panel_on, panel_off,                                                   //extra
  letter_A, letter_B, letter_C, letter_D, letter_E, letter_F, letter_G,  //Big Letters
  letter_H, letter_I, letter_J, letter_K, letter_L, letter_M, letter_N,  //Big Letters
  letter_O, letter_P, letter_Q, letter_R, letter_S, letter_T, letter_U,  //Big Letters
  letter_V, letter_W, letter_X, letter_Y, letter_Z,                      //Big Letters
  letter_a,                                                              //small letters
  number_0,                                                              //numbers
};