#pragma once

#include "config.h"

bool panel_on[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 1, 1, 1,  //2
  1, 1, 1, 1,  //3
  1, 1, 1, 1,  //4
  1, 1, 1, 1,  //5
  1, 1, 1, 1,  //6
  1, 1, 1, 1,  //7
  1, 1, 1, 1,  //8
};

bool panel_off[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 0, 0, 0,  //7
  0, 0, 0, 0,  //8
};

//-------------SPECIAL-CHARS------------------

bool special_exclemation_mark[PANEL_SIZE]{
  0, 1, 0, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool special_d_quote[PANEL_SIZE]{
  0, 1, 0, 1,  //1
  0, 1, 0, 1,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 0, 0, 0,  //7
  0, 0, 0, 0,  //8
};

bool special_hash[PANEL_SIZE]{
  0, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 1, 1, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 0,  //8
};

bool special_dollar[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 1, 1, 1,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 1,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  1, 1, 1, 1,  //7
  0, 1, 1, 0,  //8
};

bool special_percent[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 1, 1,  //3
  0, 0, 1, 0,  //4
  0, 1, 1, 0,  //5
  0, 1, 0, 0,  //6
  1, 1, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool special_amperson[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 1, 0,  //3
  0, 1, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 1, 1,  //7
  0, 1, 0, 0,  //8
};

bool special_quote[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 0, 1, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 0, 0, 0,  //7
  0, 0, 0, 0,  //8
};

bool special_bracket_open[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 1, 1, 0,  //2
  1, 1, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 0, 0,  //5
  1, 1, 0, 0,  //6
  0, 1, 1, 0,  //7
  0, 0, 1, 0,  //8
};

bool [PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 0, 0, 0,  //5
  0, 0, 0, 0,  //6
  0, 0, 0, 0,  //7
  0, 0, 0, 0,  //8
};


//-------------LETTERS------------------------

bool letter_A[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_B[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_C[PANEL_SIZE]{
  0, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  0, 1, 1, 1,  //8
};

bool letter_D[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_E[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool letter_F[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_G[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 1, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_H[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_I[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  1, 1, 1, 0,  //8
};

bool letter_J[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 0, 1,  //4
  0, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_K[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 1, 0,  //2
  1, 1, 0, 0,  //3
  1, 1, 0, 0,  //4
  1, 1, 0, 0,  //5
  1, 0, 1, 0,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_L[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool letter_M[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 1, 1, 1,  //2
  1, 1, 1, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_N[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 1, 0, 1,  //2
  1, 1, 0, 1,  //3
  1, 1, 0, 1,  //4
  1, 0, 1, 1,  //5
  1, 0, 1, 1,  //6
  1, 0, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_O[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_P[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_Q[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  0, 1, 1, 0,  //7
  0, 0, 1, 1,  //8
};

bool letter_R[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 0,  //4
  1, 0, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_S[PANEL_SIZE]{
  0, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_T[PANEL_SIZE]{
  1, 1, 1, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_U[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_V[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 1,  //6
  0, 1, 1, 0,  //7
  0, 1, 1, 0,  //8
};

bool letter_W[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 1,  //6
  1, 1, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_X[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  0, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_Y[PANEL_SIZE]{
  1, 0, 1, 0,  //1
  1, 0, 1, 0,  //2
  1, 0, 1, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_Z[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 1, 0,  //3
  0, 0, 1, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

//---------------------------

bool letter_a[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  1, 1, 1, 0,  //3
  0, 0, 0, 1,  //4
  0, 1, 0, 1,  //5
  1, 0, 1, 1,  //6
  1, 0, 1, 1,  //7
  0, 1, 0, 1,  //8
};

bool letter_b[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_c[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  0, 1, 1, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  0, 1, 1, 0,  //8
};

bool letter_d[PANEL_SIZE]{
  0, 0, 0, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 0, 1,  //4
  0, 1, 1, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_e[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 1, 1, 0,  //6
  1, 0, 0, 0,  //7
  0, 1, 1, 1,  //8
};

bool letter_f[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 1, 0, 1,  //2
  0, 1, 0, 0,  //3
  1, 1, 1, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_g[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 1,  //3
  1, 0, 0, 1,  //4
  1, 0, 0, 1,  //5
  0, 1, 1, 1,  //6
  0, 0, 0, 1,  //7
  1, 1, 1, 0,  //8
};

bool letter_h[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_i[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 1, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_j[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 1, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 1, 0,  //6
  1, 0, 1, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_k[PANEL_SIZE]{
  1, 0, 0, 0,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 0, 1, 0,  //5
  1, 1, 0, 0,  //6
  1, 0, 1, 0,  //7
  1, 0, 1, 0,  //8
};

bool letter_l[PANEL_SIZE]{
  0, 1, 0, 0,  //1
  0, 1, 0, 0,  //2
  0, 1, 0, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 1,  //7
  0, 0, 1, 0,  //8
};

bool letter_m[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 0, 1,  //4
  1, 1, 1, 1,  //5
  1, 1, 1, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_n[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_o[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_p[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 0,  //3
  1, 0, 0, 1,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_q[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 1, 1, 0,  //3
  1, 0, 0, 1,  //4
  0, 1, 1, 1,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  0, 0, 0, 1,  //8
};

bool letter_r[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 1, 0,  //4
  1, 1, 0, 1,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 0, 0, 0,  //8
};

bool letter_s[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 0, 1, 0,  //7
  1, 1, 0, 0,  //8
};

bool letter_t_[PANEL_SIZE]{
  0, 1, 0, 0,  //1
  0, 1, 0, 0,  //2
  1, 1, 1, 0,  //3
  0, 1, 0, 0,  //4
  0, 1, 0, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 1,  //7
  0, 0, 1, 0,  //8
};

bool letter_u[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool letter_v[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 1, 1, 1,  //7
  0, 1, 1, 0,  //8
};

bool letter_w[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 1, 1, 1,  //7
  1, 0, 0, 1,  //8
};

bool letter_x[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 0, 0, 1,  //5
  0, 1, 1, 0,  //6
  0, 1, 1, 0,  //7
  1, 0, 0, 1,  //8
};

bool letter_y[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  1, 0, 1, 0,  //4
  1, 0, 1, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool letter_z[PANEL_SIZE]{
  0, 0, 0, 0,  //1
  0, 0, 0, 0,  //2
  0, 0, 0, 0,  //3
  0, 0, 0, 0,  //4
  1, 1, 1, 1,  //5
  0, 0, 1, 0,  //6
  0, 1, 0, 0,  //7
  1, 1, 1, 1,  //8
};

//-------------------------

bool number_0[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 0, 1, 1,  //4
  1, 1, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  1, 1, 1, 1,  //8
};

bool number_1[PANEL_SIZE]{
  0, 0, 1, 0,  //1
  0, 1, 1, 0,  //2
  1, 0, 1, 0,  //3
  0, 0, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 0, 1, 0,  //6
  0, 0, 1, 0,  //7
  0, 1, 1, 1,  //8
};

bool number_2[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 0, 1, 0,  //4
  0, 1, 0, 0,  //5
  1, 0, 0, 0,  //6
  1, 0, 0, 0,  //7
  1, 1, 1, 1,  //8
};

bool number_3[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_4[PANEL_SIZE]{
  1, 0, 0, 1,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  1, 1, 1, 1,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  0, 0, 0, 1,  //7
  0, 0, 0, 1,  //8
};

bool number_5[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  1, 0, 0, 0,  //2
  1, 0, 0, 0,  //3
  1, 1, 1, 0,  //4
  0, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_6[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 0,  //3
  1, 0, 0, 0,  //4
  1, 1, 1, 0,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_7[PANEL_SIZE]{
  1, 1, 1, 1,  //1
  0, 0, 0, 1,  //2
  0, 0, 0, 1,  //3
  0, 0, 1, 0,  //4
  0, 0, 1, 0,  //5
  0, 1, 0, 0,  //6
  0, 1, 0, 0,  //7
  0, 1, 0, 0,  //8
};

bool number_8[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 0,  //4
  1, 0, 0, 1,  //5
  1, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};

bool number_9[PANEL_SIZE]{
  0, 1, 1, 0,  //1
  1, 0, 0, 1,  //2
  1, 0, 0, 1,  //3
  0, 1, 1, 1,  //4
  0, 0, 0, 1,  //5
  0, 0, 0, 1,  //6
  1, 0, 0, 1,  //7
  0, 1, 1, 0,  //8
};


bool *panel_ascii[] = {
  panel_off,                                                              // off - 0
  panel_on,                                                               // on - 1
  panel_off,                                                              // - 2
  panel_off,                                                              // - 3
  panel_off,                                                              // - 4
  panel_off,                                                              // - 5
  panel_off,                                                              // - 6
  panel_off,                                                              // - 7
  panel_off,                                                              // - 8
  panel_off,                                                              // - 9
  panel_off,                                                              // - 10
  panel_off,                                                              // - 11
  panel_off,                                                              // - 12
  panel_off,                                                              // - 13
  panel_off,                                                              // - 14
  panel_off,                                                              // - 15
  panel_off,                                                              // - 16
  panel_off,                                                              // - 17
  panel_off,                                                              // - 18
  panel_off,                                                              // - 19
  panel_off,                                                              // - 20
  panel_off,                                                              // - 21
  panel_off,                                                              // - 22
  panel_off,                                                              // - 23
  panel_off,                                                              // - 24
  panel_off,                                                              // - 25
  panel_off,                                                              // - 26
  panel_off,                                                              // - 27
  panel_off,                                                              // - 28
  panel_off,                                                              // - 29
  panel_off,                                                              // - 30
  panel_off,                                                              // - 31
  panel_off,                                                              // Space - 32
  special_exclemation_mark,                                                              // ! - 33
  special_d_quote,                                                              // " - 34
  special_hash,                                                              // # - 35
  special_dollar,                                                              // $ - 36
  special_percent,                                                              // % - 37
  special_amperson,                                                              // & - 38
  special_quote,                                                              // ' - 39
  special_bracket_open,                                                              // ( - 40
  panel_off,                                                              // ) - 41
  panel_off,                                                              // * - 42
  panel_off,                                                              // + - 43
  panel_off,                                                              // , - 44
  panel_off,                                                              // - - 45
  panel_off,                                                              // . - 46
  panel_off,                                                              // / - 47
  number_0,                                                               // 0 - 48
  number_1,                                                               // 1 - 49
  number_2,                                                               // 2 - 50
  number_3,                                                               // 3 - 51
  number_4,                                                               // 4 - 52
  number_5,                                                               // 5 - 53
  number_6,                                                               // 6 - 54
  number_7,                                                               // 7 - 55
  number_8,                                                               // 8 - 56
  number_9,                                                               // 9 - 57
  panel_off,                                                              // : - 58
  panel_off,                                                              // ; - 59
  panel_off,                                                              // < - 60
  panel_off,                                                              // = - 61
  panel_off,                                                              // > - 62
  panel_off,                                                              // ? - 63
  panel_off,                                                              // @ - 64
  letter_A,                                                               // A - 65
  letter_B,                                                               // B - 66
  letter_C,                                                               // C - 67
  letter_D,                                                               // D - 68
  letter_E,                                                               // E - 69
  letter_F,                                                               // F - 70
  letter_G,                                                               // G - 71
  letter_H,                                                               // H - 72
  letter_I,                                                               // I - 73
  letter_J,                                                               // J - 74
  letter_K,                                                               // K - 75
  letter_L,                                                               // L - 76
  letter_M,                                                               // M - 77
  letter_N,                                                               // N - 78
  letter_O,                                                               // O - 79
  letter_P,                                                               // P - 80
  letter_Q,                                                               // Q - 81
  letter_R,                                                               // R - 82
  letter_S,                                                               // S - 83
  letter_T,                                                               // T - 84
  letter_U,                                                               // U - 85
  letter_V,                                                               // V - 86
  letter_W,                                                               // W - 87
  letter_X,                                                               // X - 88
  letter_Y,                                                               // Y - 89
  letter_Z,                                                               // Z - 90
  letter_a, letter_b, letter_c, letter_d, letter_e, letter_f, letter_g,   //small letters
  letter_h, letter_i, letter_j, letter_k, letter_l, letter_m, letter_n,   //small letters
  letter_o, letter_p, letter_q, letter_r, letter_s, letter_t_, letter_u,  //small letters
  letter_v, letter_w, letter_x, letter_y, letter_z,                       //small letters
  number_0, number_1, number_2, number_3, number_4,                       //numbers
  number_5, number_6, number_7, number_8, number_9                        //numbers
};
